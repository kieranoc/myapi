<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>ie.bwc.kieran</groupId>
	<artifactId>myapi</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<properties>
		<!-- dependency versions -->
		<org.springframework.boot-version>1.5.10.RELEASE</org.springframework.boot-version>
		<spring-cloud-starter-netflix-eureka-server.version>1.4.3.RELEASE</spring-cloud-starter-netflix-eureka-server.version>
		<spring-cloud-starter-netflix-eureka-client.version>1.4.3.RELEASE</spring-cloud-starter-netflix-eureka-client.version>
		<spring-cloud-starter-openfeign.version>1.4.3.RELEASE</spring-cloud-starter-openfeign.version>
		<spring-cloud-dependencies.version>Edgware.SR2</spring-cloud-dependencies.version>
		<junit.version>4.12</junit.version>
		<myapicommontest.version>0.0.1-SNAPSHOT</myapicommontest.version>
		<myapicommonmodels.version>0.0.1-SNAPSHOT</myapicommonmodels.version>
		<hamcrest-library.version>1.3</hamcrest-library.version>
		<com.fasterxml.jackson.core-version>2.9.4</com.fasterxml.jackson.core-version>
		<guava.version>24.0-jre</guava.version>

		<!-- plugin versions -->
		<maven-surefire-plugin.version>2.20.1</maven-surefire-plugin.version>
		<maven-failsafe-plugin.version>2.20.1</maven-failsafe-plugin.version>
		<sonar-maven-plugin.version>3.4.0.905</sonar-maven-plugin.version>
		<maven-compiler-plugin.version>3.7.0</maven-compiler-plugin.version>
		<maven-jar-plugin.version>3.0.2</maven-jar-plugin.version>

		<!-- Other properties -->
		<java.version>1.8</java.version>
	</properties>

	<dependencyManagement>
		<dependencies>

			<!-- app depos -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${org.springframework.boot-version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
				<version>${spring-cloud-starter-netflix-eureka-server.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
				<version>${spring-cloud-starter-netflix-eureka-client.version}</version>
				<!-- don't want to unnecessarily use Jersey, want to jus use Spring standard 
					resttemplate by default -->
				<exclusions>
					<exclusion>
						<groupId>com.sun.jersey</groupId>
						<artifactId>jersey-client</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jersey</groupId>
						<artifactId>jersey-core</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jersey.contribs</groupId>
						<artifactId>jersey-apache-client4</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-openfeign</artifactId>
				<version>${spring-cloud-starter-openfeign.version}</version>
			</dependency>
			<dependency>
				<groupId>ie.bwc.kieran</groupId>
				<artifactId>myapicommonmodels</artifactId>
				<version>${myapicommonmodels.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${com.fasterxml.jackson.core-version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${com.fasterxml.jackson.core-version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${com.fasterxml.jackson.core-version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<artifactId>jackson-datatype-jsr310</artifactId>
				<version>${com.fasterxml.jackson.core-version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>

			<!-- test depos -->
			<dependency>
				<groupId>ie.bwc.kieran</groupId>
				<artifactId>myapicommontest</artifactId>
				<version>${myapicommontest.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${org.springframework.boot-version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-library</artifactId>
				<version>${hamcrest-library.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<argLine>${unitCoverageAgent}</argLine>
					</configuration>
					<executions>
						<execution>
							<id>default-test</id>
							<phase>test</phase>
							<goals>
								<goal>test</goal>
							</goals>
							<configuration>
								<parallel>classes</parallel>
								<threadCount>2</threadCount>
								<excludedGroups>
									ie.bwc.myapi.annot.IntegrationTest,
									ie.bwc.myapi.annot.UnitTestSingleThread
								</excludedGroups>
							</configuration>
						</execution>
						<execution>
							<id>singlethread-test</id>
							<phase>test</phase>
							<goals>
								<goal>test</goal>
							</goals>
							<configuration>
								<threadCount>1</threadCount>
								<excludedGroups>
									ie.bwc.myapi.annot.IntegrationTest,
									ie.bwc.myapi.annot.UnitTest
								</excludedGroups>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
					<configuration>
						<argLine>${itCoverageAgent}</argLine>
						<groups>
							ie.bwc.myapi.annot.IntegrationTest
						</groups>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>intergation-test</goal>
								<goal>verify</goal>
							</goals>
							<configuration>
								<includes>
									<include>**/*.class</include>
								</includes>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<modules>
		<module>myapilogic</module>
		<module>myapicommontest</module>
		<module>myapicommonmodels</module>
		<module>myapidiscovery</module>
		<module>myapilogic2</module>
	</modules>
</project>